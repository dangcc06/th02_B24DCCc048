import React, { useState } from "react";


const btnStyle = {
  margin: "4px",
  padding: "6px 12px",
  border: "1px solid #333",
  backgroundColor: "#f0f0f0",
  cursor: "pointer",
  fontSize: "14px",
};

const inputStyle = {
  padding: "6px",
  border: "1px solid #333",
  fontSize: "14px",
  marginRight: "8px",
};


function TodoApp() {
  const [text, setText] = useState("");
  const [items, setItems] = useState([]);

  function handleAdd() {
    if (!text.trim()) return;
    setItems([...items, { id: Date.now(), text }]);
    setText("");
  }

  function handleDelete(id) {
    setItems(items.filter((item) => item.id !== id));
  }

  return (
    <div>
      <h3>B√†i 1: To-do List</h3>
      <p>
        C√≥ m·ªôt input v√† n√∫t ‚ÄúTh√™m‚Äù. Khi nh·∫≠p n·ªôi dung v√† nh·∫•n Th√™m, item m·ªõi s·∫Ω
        ƒë∆∞·ª£c hi·ªÉn th·ªã trong danh s√°ch. M·ªói item c√≥ n√∫t X√≥a ƒë·ªÉ x√≥a kh·ªèi danh
        s√°ch.
      </p>
      <input
        value={text}
        onChange={(e) => setText(e.target.value)}
        placeholder="Nh·∫≠p c√¥ng vi·ªác"
        style={inputStyle}
      />
      <button style={btnStyle} onClick={handleAdd}>
        Th√™m
      </button>
      <ul>
        {items.map((item) => (
          <li key={item.id}>
            {item.text}{" "}
            <button style={btnStyle} onClick={() => handleDelete(item.id)}>
              X√≥a
            </button>
          </li>
        ))}
      </ul>
    </div>
  );
}

function ColorBox({ color }) {
  return (
    <div
      style={{
        width: "100px",
        height: "100px",
        border: "1px solid black",
        marginTop: "10px",
        backgroundColor: color,
      }}
    ></div>
  );
}

function ColorPicker() {
  const [color, setColor] = useState("");

  return (
    <div>
      <h3>B√†i 2: Color Picker</h3>
      <button style={btnStyle} onClick={() => setColor("red")}>
        ƒê·ªè
      </button>
      <button style={btnStyle} onClick={() => setColor("blue")}>
        Xanh
      </button>
      <button style={btnStyle} onClick={() => setColor("yellow")}>
        V√†ng
      </button>
      <ColorBox color={color} />
    </div>
  );
}


function CartApp() {
  const products = [
    { id: 1, name: "S√°ch", price: 10000 },
    { id: 2, name: "B√∫t", price: 5000 },
    { id: 3, name: "V·ªü", price: 7000 },
  ];
  const [cart, setCart] = useState([]);

  function addToCart(product) {
    setCart([...cart, product]);
  }

  const total = cart.reduce((sum, p) => sum + p.price, 0);

  return (
    <div>
      <h3>B√†i 3: Gi·ªè h√†ng</h3>
      {products.map((p) => (
        <div key={p.id}>
          {p.name} - {p.price}‚Ç´{" "}
          <button style={btnStyle} onClick={() => addToCart(p)}>
            Th√™m v√†o gi·ªè
          </button>
        </div>
      ))}
      <h4>Gi·ªè h√†ng</h4>
      <ul>
        {cart.map((item, index) => (
          <li key={index}>
            {item.name} - {item.price}‚Ç´
          </li>
        ))}
      </ul>
      <p>
        <b>T·ªïng ti·ªÅn:</b> {total}‚Ç´
      </p>
    </div>
  );
}

function Post({ text }) {
  const [like, setLike] = useState(0);
  const [dislike, setDislike] = useState(0);

  return (
    <div style={{ marginBottom: "10px" }}>
      <p>{text}</p>
      <button style={btnStyle} onClick={() => setLike(like + 1)}>
        üëç {like}
      </button>
      <button style={btnStyle} onClick={() => setDislike(dislike + 1)}>
        üëé {dislike}
      </button>
    </div>
  );
}

function PostApp() {
  const posts = [
    "H·ªçc ReactJS c√≥ kh√≥ kh√¥ng?",
    "Props v√† State l√† g√¨?",
    "L·∫≠p tr√¨nh web c√≥ vui kh√¥ng?",
  ];
  return (
    <div>
      <h3>B√†i 4: Like/Dislike Post</h3>
      {posts.map((p, i) => (
        <Post key={i} text={p} />
      ))}
    </div>
  );
}


function QuizApp() {
  const questions = [
    {
      q: "ReactJS d√πng ƒë·ªÉ l√†m g√¨?",
      options: ["Mobile App", "Web UI", "H·ªá ƒëi·ªÅu h√†nh", "C∆° s·ªü d·ªØ li·ªáu"],
      answer: 1,
    },
    {
      q: "State trong React l√† g√¨?",
      options: ["D·ªØ li·ªáu ƒë·ªông", "Th∆∞ vi·ªán CSS", "API", "Hook"],
      answer: 0,
    },
    {
      q: "JSX l√† g√¨?",
      options: [
        "M·ªôt ng√¥n ng·ªØ l·∫≠p tr√¨nh",
        "C√∫ ph√°p m·ªü r·ªông c·ªßa JavaScript",
        "Framework",
        "Database",
      ],
      answer: 1,
    },
  ];

  const [current, setCurrent] = useState(0);
  const [score, setScore] = useState(0);
  const [finished, setFinished] = useState(false);

  function handleAnswer(index) {
    if (index === questions[current].answer) {
      setScore(score + 1);
    }
    if (current < questions.length - 1) {
      setCurrent(current + 1);
    } else {
      setFinished(true);
    }
  }

  return (
    <div>
      <h3>B√†i 5: Quiz App</h3>
      {!finished ? (
        <div>
          <p>{questions[current].q}</p>
          {questions[current].options.map((opt, i) => (
            <button
              key={i}
              style={{ ...btnStyle, display: "block" }}
              onClick={() => handleAnswer(i)}
            >
              {opt}
            </button>
          ))}
        </div>
      ) : (
        <p>
          B·∫°n tr·∫£ l·ªùi ƒë√∫ng {score}/{questions.length} c√¢u
        </p>
      )}
    </div>
  );
}

export default function App() {
  return (
    <div style={{ padding: "20px", fontFamily: "Arial, sans-serif" }}>
      <TodoApp />
      <hr />
      <ColorPicker />
      <hr />
      <CartApp />
      <hr />
      <PostApp />
      <hr />
      <QuizApp />
    </div>
  );
}
